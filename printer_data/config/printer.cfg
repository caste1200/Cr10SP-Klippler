[include shell_command.cfg]
[include mainsail.cfg]
[include Print_Start.cfg]
[include Print_End.cfg]
[include moonraker_obico_macros.cfg]
[include KAMP_Settings.cfg]                                                                                #for tunnig fast

# This file contains pin mappings for the Creality CR-10 Smart Pro (v2.0)
# with a CR-FDM-v2.5.S1 board.
#
# To use this config, during "make menuconfig" select the STM32F103
# with a "64KiB bootloader" and serial (on USART1 PA10/PA9)
# communication. Enable PA0 GPIO pin on startup.
#
# Flash this firmware on the MCU by copying "out/klipper.bin" to an SD
# card and turning the printer on with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
#
# The machine itself includes a small router that can run a Klipper
# frontend. You don't need to buy a single-board computer.
#
# See docs/Config_Reference.md for a description of parameters.

###fluidd set

[virtual_sdcard]
path: ~/printer_data/gcodes

[stepper_x]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: PC4
position_min: -2.5
position_endstop: -2.5
position_max: 311.5
homing_speed: 50

[stepper_y]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: PC5
position_min: -4
position_endstop: -4
position_max: 311
homing_speed: 50

[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
rotation_distance: 8
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_min: -6
position_max: 411
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
rotation_distance: 7.4872
microsteps: 16
nozzle_diameter: 0.6
filament_diameter: 1.750
heater_pin: PB14
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB1
#control: pid
#pid_Kp: 22.865
#pid_Ki: 1.292
#pid_Kd: 101.178
min_temp: 0
max_temp: 300
max_extrude_cross_section: 5 ;for adaptive purge

[heater_bed]
heater_pin: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB0
#control: pid
#pid_Kp: 72.49
#pid_Ki: 0.844
#pid_Kd: 1542.189
min_temp: 0
max_temp: 120

[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

[fan]
pin: PB15
kick_start_time: 0.5

#set heater fan runnig with temperature over 60;
[heater_fan hotend_fan]
pin: PC13
heater: extruder
heater_temp: 50.0



[mcu]
serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# serial:/dev/serial/by-id/usb-Klipper_stm32f401xc_18003B000950325535303620-if00
restart_method: command

# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.

# Enable when plugged in + there's two other steps before this.

#[adxl345]
#cs_pin:rpi:None
#spi_speed: 5000000
#spi_bus:spidev1.0

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 70
#probe_points:
#    150,150,10

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,10


[exclude_object]

[filament_switch_sensor runout_sensor]
pause_on_runout: false
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: !PA15

[safe_z_home]
home_xy_position: 150,150
speed: 50
z_hop: 10
z_hop_speed: 5

[bltouch]
sensor_pin: ^PC15
control_pin: PC14
x_offset: -32.5
y_offset: -40.6
#z_offset: 0.0
samples: 2
speed: 3

[bed_mesh]
speed: 150
mesh_min: 15,30         #need to handle head distance with bl_touch
#mesh_max: 210,190       #max probe range
mesh_max: 267.5,259.4       #max probe range
probe_count: 5,5
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic

#[probe]
#pin: PC14
#x_offset: 0.0
#y_offset: 0.0
#z_offset: 1.50
#speed: 2.0
#samples: 2

[screws_tilt_adjust]
screw1: 60, 80
screw1_name: front left screw
screw2: 300, 80
screw2_name: front right screw
# The rear screws are actually mechanically not reachable for the
# probe, but that is ok, adjustments will still converge.
screw3: 300, 300
screw3_name: rear right screw
screw4: 60, 300
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

# Main light bar
[output_pin lights]
pin: PA7
value: 1

# Do not use PB12. PB12 resets the Wifi board.
#[output_pin factory_reset]
#pin: PB12
#value: 0


# Turns off the printer
[output_pin power]
pin: PA0
value: 1
shutdown_value: 1


[gcode_macro G29]				#界面中增加G29指令
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  # save_config



[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000
square_corner_velocity: 5.0
max_z_velocity: 10
max_z_accel: 100

[display_status]

[pause_resume]

[gcode_macro PRINT_START]
gcode:
    START_PRINT {rawparams}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.
  
#####################################################################
#Spools
#####################################################################
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}
  
#####################################################################
#Backup
#####################################################################
[gcode_macro update_gitBackup]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True

#####################################################################
#NOZZLE WIPE
#####################################################################
[gcode_macro CLEAN_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=clean_nozzle_state                                                                                                     #for tunnig fast
    _CG28   				# home if needed
    G90
    G1 Z10 F600
    G1 X-2.5 F1000  			# move behind brush
    G1 Z0.5 F600     			# wipe height
    {% if printer.extruder.target >= 190 and (printer.extruder.target - printer.extruder.temperature)|abs <= 5 %}
        M83
        #G1 E15 F250      	# purge @ 10mm^3/s
        #G1 E-2 F1000     	# retract
        #G4 P2000         	# wait 2s
        G92 E0
        {% for wipes in range(3) %}   # wipe 5 times
            G1 X1 F1000
            G1 X-2.5 F1000
        {% endfor %}
        G1 X15 F500
    {% endif %}
    RESTORE_GCODE_STATE NAME=clean_nozzle_state
	
	
[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %} G28 {% endif %}
    
#####################################################################
#Lights and Printer Switches
#####################################################################

[gcode_macro CR_POWER_OFF]
gcode:
    SET_PIN PIN=power VALUE=0.00 #Turn off the printer 

[gcode_macro LED_ON]
gcode: 
    SET_PIN PIN=lights VALUE=1.00

[gcode_macro LED_OFF]
gcode:
    SET_PIN PIN=lights VALUE=0.00

#####################################################################
#Lights off after print
#####################################################################

[gcode_macro M84]
rename_existing: M84.1
gcode: 
    M84.1 { rawparams }
    LED_OFF

#####################################################################
#Printer off after print
#####################################################################
#[gcode_macro M84]
#rename_existing: M84.1
#gcode: 
#    M84.1 { rawparams }
#    LED_OFF
#    CR_POWER_OFF
    
#####################################################################
# Case Lights
#####################################################################
[gcode_macro LIGHTS]
variable_lights_on: 1
gcode:
    SET_PIN PIN=lights VALUE={printer["gcode_macro LIGHTS"].lights_on}
      {% if printer["gcode_macro LIGHTS"].lights_on == 1 %}
    SET_GCODE_VARIABLE MACRO=LIGHTS VARIABLE=lights_on VALUE=0                                                                                      #for tunnig fast
      {% else %}
    SET_GCODE_VARIABLE MACRO=LIGHTS VARIABLE=lights_on VALUE=1
      {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.747
#*# pid_ki = 0.978
#*# pid_kd = 80.529
#*#
#*# [bltouch]
#*# z_offset = 3.935
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 76.589
#*# pid_ki = 1.187
#*# pid_kd = 1234.995
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.077500, 0.061250, 0.038750
#*# 	  0.121250, 0.101250, 0.052500
#*# 	  0.107500, 0.100000, 0.061250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 146.66
#*# max_x = 161.84
#*# min_y = 144.61
#*# max_y = 162.79
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 38.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 23.8
